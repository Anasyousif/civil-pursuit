// ---------------------------------------------------------------------------------------------- \\
var should = require('should');
// ---------------------------------------------------------------------------------------------- \\
module.exports = function (req, res, next) {
    /******************************************************************************** SMOKE-TEST **/
    // ------------------------------------------------------------------------------------------ \\
    req                               .should.be.an.Object;
    // ------------------------------------------------------------------------------------------ \\
    req.constructor.name              .should.equal('IncomingMessage');
    // ------------------------------------------------------------------------------------------ \\
    req                               .should.have.property('params')
    // ------------------------------------------------------------------------------------------ \\
    req.params                        .should.be.an.Object;
    // ------------------------------------------------------------------------------------------ \\                                  
    req.params                        .should.have.property('dir');
    // ------------------------------------------------------------------------------------------ \\
    req.params.dir                    .should.be.a.String;
    // ------------------------------------------------------------------------------------------ \\
    ['in', 'out', 'up', 'off']        .should.containEql(req.params.dir);
    // ------------------------------------------------------------------------------------------ \\
    res                               .should.be.an.Object;
    // ------------------------------------------------------------------------------------------ \\
    res.constructor.name              .should.equal('ServerResponse');
    // ------------------------------------------------------------------------------------------ \\
    next                              .should.be.a.Function;
    // ------------------------------------------------------------------------------------------ \\
  /********************************************************************************   DOMAIN     **/
  // -------------------------------------------------------------------------------------------- \\
  var domain = require('domain').create();
  // -------------------------------------------------------------------------------------------- \\
  domain.on('error', function (error) {
    return next(error);
  });
  // -------------------------------------------------------------------------------------------- \\
  domain.run(function () {
    // ------------------------------------------------------------------------------------------ \\
    switch ( req.params.dir ) {
      /******************************************************************************** SIGN-UP  **/
      // ---------------------------------------------------------------------------------------- \\
      case 'up':
        // -------------------------------------------------------------------------------------- \\
          req                             .should.have.property('body');
          // ------------------------------------------------------------------------------------ \\
          req.body                        .should.be.an.Object;
          // ------------------------------------------------------------------------------------ \\
          req.body                        .should.have.property('email');
          // ------------------------------------------------------------------------------------ \\
          req.body.email                  .should.be.a.String;
          // ------------------------------------------------------------------------------------ \\
          req.body                        .should.have.property('password');
          // ------------------------------------------------------------------------------------ \\
          req.body.password               .should.be.a.String;
        // -------------------------------------------------------------------------------------- \\
        var User = require('../lib/api/users');
          // ------------------------------------------------------------------------------------ \\
          User                            .should.be.an.Object;
          User                            .should.have.property('POST');
          User.POST                       .should.be.a.Function;
        // -------------------------------------------------------------------------------------- \\
        /********************************************************************** CREATE NEW USER  **/
        // -------------------------------------------------------------------------------------- \\
        User.POST({
            body: req.body
          },
          // ------------------------------------------------------------------------------------ \\
          domain.intercept(function (saved) {
            res.cookie('synuser', { email: req.body.email }, { path: '/', signed: true });
            res.json(saved);
          }));
        // -------------------------------------------------------------------------------------- \\
        break;
      // ---------------------------------------------------------------------------------------- \\
      /******************************************************************************** SIGN-IN  **/
      // ---------------------------------------------------------------------------------------- \\
      case 'in':
        // -------------------------------------------------------------------------------------- \\
          req                             .should.have.property('body');
          // ------------------------------------------------------------------------------------ \\
          req.body                        .should.be.an.Object;
          // ------------------------------------------------------------------------------------ \\
          req.body                        .should.have.property('email');
          // ------------------------------------------------------------------------------------ \\
          req.body.email                  .should.be.a.String;
          // ------------------------------------------------------------------------------------ \\
          req.body                        .should.have.property('password');
          // ------------------------------------------------------------------------------------ \\
          req.body.password               .should.be.a.String;
        // -------------------------------------------------------------------------------------- \\
        var User = require('../lib/models/User.model');
          // ------------------------------------------------------------------------------------ \\
          User                            .should.be.a.Function;
          User                            .should.have.property('findOne');
          User.findOne                    .should.be.a.Function;
        // -------------------------------------------------------------------------------------- \\
        /**************************************************************************** FIND USER  **/
        // -------------------------------------------------------------------------------------- \\
        function customError (code, message) {
          var error = new Error(message);
          error.status = code;
          return error;
        }
        User.findOne({
            email: req.body.email
          },
          // ------------------------------------------------------------------------------------ \\
          domain.intercept(function (user) {
            if ( ! user ) {
              throw customError(404, 'No such user');
            }

            var bcrypt = require('bcrypt');

            bcrypt.compare(req.body.password, user.password, domain.intercept(function (same) {
              if ( ! same ) {
                throw customError(404, 'No such user');
              }
              res.cookie('synuser', { email: req.body.email }, { path: '/', signed: true });
              res.json({ in: true });
            }));
          }));
        // -------------------------------------------------------------------------------------- \\
        break;
      // ---------------------------------------------------------------------------------------- \\
      case 'out':

        res.clearCookie('synuser');

        res.redirect('/');
        break;
      // ---------------------------------------------------------------------------------------- \\
    }
    // ------------------------------------------------------------------------------------------ \\
  });
  // -------------------------------------------------------------------------------------------- \\
};