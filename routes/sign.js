// ---------------------------------------------------------------------------------------------- \\
var should = require('should');
// ---------------------------------------------------------------------------------------------- \\
var mongoose = require('mongoose');
// ---------------------------------------------------------------------------------------------- \\
if ( ! mongoose.connection._readyState ) {
  // -------------------------------------------------------------------------------------------- \\
  'Mongoose not connected to MongoHQ'       .Warning();
  // -------------------------------------------------------------------------------------------- \\
  'Will try to connect to %s'               .format(process.env.MONGOHQ_URL).Info();
 // -------------------------------------------------------------------------------------------- \\
  var db = mongoose.connect( process.env.MONGOHQ_URL );
  // -------------------------------------------------------------------------------------------- \\
  mongoose.connection.on('error', function (error) {
    error.message.Error();
  });
  // -------------------------------------------------------------------------------------------- \\
  mongoose.connection.once('open', function () {
    'Mongoose connected to MongoHQ'     .Success();
  });
  // -------------------------------------------------------------------------------------------- \\
}
// ---------------------------------------------------------------------------------------------- \\
var cookie = {
  path: '/',
  signed: true,
  maxAge: (1000 * 60 * 60 * 24 * 7)
};
// ---------------------------------------------------------------------------------------------- \\
function customError (code, message) {
  var error = new Error(message);
  error.status = code;
  return error;
}
// ---------------------------------------------------------------------------------------------- \\
module.exports = function (req, res, next) {
    /******************************************************************************** SMOKE-TEST **/
    // ------------------------------------------------------------------------------------------ \\
    req                               .should.be.an.Object;
    // ------------------------------------------------------------------------------------------ \\
    req.constructor.name              .should.equal('IncomingMessage');
    // ------------------------------------------------------------------------------------------ \\
    req                               .should.have.property('params')
    // ------------------------------------------------------------------------------------------ \\
    req.params                        .should.be.an.Object;
    // ------------------------------------------------------------------------------------------ \\                                  
    req.params                        .should.have.property('dir');
    // ------------------------------------------------------------------------------------------ \\
    req.params.dir                    .should.be.a.String;
    // ------------------------------------------------------------------------------------------ \\
    ['in', 'out', 'up', 'off']        .should.containEql(req.params.dir);
    // ------------------------------------------------------------------------------------------ \\
    res                               .should.be.an.Object;
    // ------------------------------------------------------------------------------------------ \\
    res.constructor.name              .should.equal('ServerResponse');
    // ------------------------------------------------------------------------------------------ \\
    next                              .should.be.a.Function;
    // ------------------------------------------------------------------------------------------ \\
  /********************************************************************************   DOMAIN     **/
  // -------------------------------------------------------------------------------------------- \\
  var domain = require('domain').create();
  // -------------------------------------------------------------------------------------------- \\
  domain.on('error', function (error) {
    return next(error);
  });
  // -------------------------------------------------------------------------------------------- \\
  domain.run(function () {
    // ------------------------------------------------------------------------------------------ \\
    switch ( req.params.dir ) {
      /******************************************************************************** SIGN-UP  **/
      // ---------------------------------------------------------------------------------------- \\
      case 'up':
        // -------------------------------------------------------------------------------------- \\
          req                             .should.have.property('body');
          // ------------------------------------------------------------------------------------ \\
          req.body                        .should.be.an.Object;
          // ------------------------------------------------------------------------------------ \\
          req.body                        .should.have.property('email');
          // ------------------------------------------------------------------------------------ \\
          req.body.email                  .should.be.a.String;
          // ------------------------------------------------------------------------------------ \\
          req.body                        .should.have.property('password');
          // ------------------------------------------------------------------------------------ \\
          req.body.password               .should.be.a.String;
        // -------------------------------------------------------------------------------------- \\
        var User = mongoose.model('User', Schema);
          // ------------------------------------------------------------------------------------ \\
          User                            .should.be.a.Function;
          User                            .should.have.property('create');
          User.create                     .should.be.a.Function;
        // -------------------------------------------------------------------------------------- \\
        /************************************************************************** CREATE USER  **/
        // -------------------------------------------------------------------------------------- \\
        User.create({
          email: req.body.email,
          password: req.body.password
        }, domain.intercept(function (created) {
          res.cookie('synuser', { email: req.body.email }, cookie);
          res.json(created);
        }));
        // -------------------------------------------------------------------------------------- \\
        break;
      // ---------------------------------------------------------------------------------------- \\
      /******************************************************************************** SIGN-IN  **/
      // ---------------------------------------------------------------------------------------- \\
      case 'in':
        // -------------------------------------------------------------------------------------- \\
          req                             .should.have.property('body');
          // ------------------------------------------------------------------------------------ \\
          req.body                        .should.be.an.Object;
          // ------------------------------------------------------------------------------------ \\
          req.body                        .should.have.property('email');
          // ------------------------------------------------------------------------------------ \\
          req.body.email                  .should.be.a.String;
          // ------------------------------------------------------------------------------------ \\
          req.body                        .should.have.property('password');
          // ------------------------------------------------------------------------------------ \\
          req.body.password               .should.be.a.String;
        // -------------------------------------------------------------------------------------- \\
        'Sign-in attempt: %s'             .format(req.body.email).Info();
        // -------------------------------------------------------------------------------------- \\
        var Schema = require('../models/User');
          // ------------------------------------------------------------------------------------ \\
          Schema                          .should.be.an.Object;
        // -------------------------------------------------------------------------------------- \\
        var User = mongoose.model('User', Schema);
          // ------------------------------------------------------------------------------------ \\
          User                            .should.be.a.Function;
          User                            .should.have.property('findOne');
          User.findOne                    .should.be.a.Function;
        // -------------------------------------------------------------------------------------- \\
        /**************************************************************************** FIND USER  **/
        // -------------------------------------------------------------------------------------- \\
        User.findOne({
            email: req.body.email
          },
          // ------------------------------------------------------------------------------------ \\
          domain.intercept(function (user) {
            // ---------------------------------------------------------------------------------- \\
            if ( ! user ) {
              'User not found: %s'         .format(req.body.email).Warning();

              throw customError(404, 'No such user');
            }
            // ---------------------------------------------------------------------------------- \\
            'User found: %s'               .format(req.body.email).Info();
            // ---------------------------------------------------------------------------------- \\
            var bcrypt = require('bcrypt');
            // ---------------------------------------------------------------------------------- \\
            bcrypt.compare(req.body.password, user.password, domain.intercept(function (same) {
              if ( ! same ) {
                'Wrong password: %s'      .format(req.body.email).Warning();
                throw customError(401, 'No such user');
              }
              // -------------------------------------------------------------------------------- \\
              'Email match: %s'         .format(req.body.email).Info();
              // -------------------------------------------------------------------------------- \\
              res.cookie('synuser', { email: req.body.email }, cookie);
              // -------------------------------------------------------------------------------- \\
              'User signed in: %s'      .format(req.body.email).Success();
              // -------------------------------------------------------------------------------- \\
              res.json({ in: true });
            }));
          }));
        // -------------------------------------------------------------------------------------- \\
        break;
      // ---------------------------------------------------------------------------------------- \\
      case 'out':

        res.clearCookie('synuser');

        res.redirect('/');
        break;
      // ---------------------------------------------------------------------------------------- \\
    }
    // ------------------------------------------------------------------------------------------ \\
  });
  // -------------------------------------------------------------------------------------------- \\
};